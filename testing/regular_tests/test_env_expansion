#!/bin/zsh
diffFile=test_env_expansion.diff
pass=true
run_cmd() {
    #echo Processing Command: $1
    echo Processing Command: $1 >>& $diffFile
    diff --color -u <(/bin/tcsh <<< $1 2>&1) <(../../shell <<< $1 2>&1) >>& $diffFile
    check $1 $?
}
check() {
    if [ $2 -ne 0 ] 
    then
        echo -e "\033[1;31m Failed to run $1\033[0m"
        pass=false
    else
        echo -e "\033[1;32m $1 ran successfully\033[0m"
    fi
}
echo -e "\033[1;4;93m\ttest env expansion\033[0m"
echo -e "\033[1;4;93m\ttest env expansion\033[0m" > $diffFile

#special expansions
input_str=$'echo ${SHELL}\necho $SHELL'
real_path=$(realpath ../../shell)
echo "Processing Command $input_str" >>& $diffFile
diff --color -u <((echo $real_path; echo $real_path) 2>&1) <(../../shell <<< $input_str 2>&1) >>& $diffFile
check $input_str $?
input_str=$'ls gay\n echo ${?}\nls \necho $?'
run_cmd $input_str
input_str=$'echo &\n sleep 1 &\n ps -u\necho ${!}\necho $!'
echo "Processing Command $input_str" >>& $diffFile
output=$(../../shell <<< "$input_str" 2>&1)
pid=$(echo "$output" | tail -1)
res=$(echo "$output" | grep $pid | grep "sleep 1")
check $input_str $?
# should not grab redirects
input_str=$'ls > /dev/null\necho ${_}'
echo "Processing Command $input_str" >>& $diffFile
diff <(echo "ls") <(../../shell <<< "$input_str" 2>&1) >>& $diffFile
check $input_str $?


# should grab arguments
input_str=$'ls -al > /dev/null\necho $_'
echo "Processing Command $input_str" >>& $diffFile
diff <(echo "-al") <(../../shell <<< "$input_str" 2>&1) >>& $diffFile
check $input_str $?

input_str=$'echo ${$}'
echo "Processing Command $input_str" >>& $diffFile
../../shell <<< "$input_str" 2>&1 > out-out & pid=$!
sleep 1
diff <(cat out-out) <(echo $pid) >>& $diffFile
check $input_str $?

input_str=$'echo $$'
echo "Processing Command $input_str" >>& $diffFile
../../shell <<< "$input_str" 2>&1 > outtmp & pid=$!
sleep 1
diff <(cat outtmp) <(echo $pid) >>& $diffFile
check $input_str $?
input_str=$'setenv a "asd bf"\n echo $a person${a}'
run_cmd $input_str
input_str=$'ls ${HOME}/"Programming"\n echo $PWD"asdf"'
run_cmd $input_str
input_str=$'ls $HOME/"Programming"'
run_cmd $input_str


if [ $pass = true ]
then 
    exit 0
else
    exit 1
fi
